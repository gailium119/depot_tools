{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f4550212_f3a82870",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-19T22:28:18Z",
      "side": 1,
      "message": "I don\u0027t know that I necessarily agree that this is more straightforward given the complexity you highlighted it introducing downstream.\n\nI agree totally that specific error messages are more clear, especially when there is complexity or conditions. In this case, I think it\u0027s pretty straightforward thoughth, because we only allow one thing.\n\nIMO it is very clear what the issue is if the error was to say something like \"Only commas are allowed as license separators. Using any other delimiter will result in an error. Each entry should be separated by a aingle comma only. If you have multiple licenses..etc\"",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec40b9f1_43fa277d",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2025-01-20T00:09:21Z",
      "side": 1,
      "message": "+1 I think it\u0027s easier to just mention in additional part \"only commas are allowed as delimiter\".\n\n// You won\u0027t be able to exhaust all bad delimiters",
      "parentUuid": "f4550212_f3a82870",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "abc83c9c_b5a97389",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-20T05:48:59Z",
      "side": 1,
      "message": "I rewrote the error message. PTAL.\n\nI\u0027m considering cases where someone is providing a value like \"MIT, Apache-2.0, Customy-custompants and the extra custom license bits\" and they\u0027ll be like \u0027but I _am_ using commas\u0027 not realising that it\u0027s the \u0027 and \u0027 that is the issue.\n\nJiewei, I still need to use a list of bad delimiters, otherwise this will introduce a lot more complexity. These are the only bad delimiters we see being used.",
      "parentUuid": "ec40b9f1_43fa277d",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d8b5d352_7c875426",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 15,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-20T21:22:23Z",
      "side": 1,
      "message": "What is the plan in the case of `Customy-custompants and the extra custom license bits`?  Plenty of license names have an `and` in them for this exact reason, which is another reason to trend toward the ID where SPDX is concerned, but what about the others? Are values with `and` just never going to work, because even if they\u0027re on the allowlist we won\u0027t get past this error?",
      "parentUuid": "abc83c9c_b5a97389",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ffee51c2_4a1eba6b",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 102,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-19T22:28:18Z",
      "side": 1,
      "message": "Please format all these long lines. Lines should be max 80 cols wide.",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e7263c62_05e389f7",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 102,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-20T05:48:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ffee51c2_4a1eba6b",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ba42df34_e45a12aa",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-19T22:28:18Z",
      "side": 1,
      "message": "Preemptively",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fa1c4b1e_8e8a6f57",
        "filename": "metadata/fields/custom/license.py",
        "patchSetId": 7
      },
      "lineNbr": 103,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-20T05:48:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba42df34_e45a12aa",
      "revId": "3465d67282b3488f18545e1fb859420b5e4a3f8d",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}