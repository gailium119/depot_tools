{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7c22ee87_f20cd666",
        "filename": "recipes/recipe_modules/gclient/config.py",
        "patchSetId": 1
      },
      "lineNbr": 526,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2025-01-15T20:22:26Z",
      "side": 1,
      "message": "Note that the chromium_website recipe defines this context directly: https://source.chromium.org/chromium/infra/infra_superproject/+/main:build/recipes/recipes/chromium_website.py;drc\u003d5522255be525078957885623ca08292f2021582b;l\u003d110\n\nIf we can switch to this, we should remove the context in that recipe, I think.\n\nThough I wonder if there\u0027s some way to define the context in the website repo and have it be picked up by a recipe in a different repo?",
      "fixSuggestions": [
        {
          "fixId": "70c1a3b6_acf34ce4",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "recipes/recipe_modules/gclient/config.py",
              "range": {
                "startLine": 526,
                "startChar": 0,
                "endLine": 527,
                "endChar": 0
              },
              "replacement": "  m[\u0027website\u0027] \u003d \u0027got_revision\u0027\n"
            }
          ]
        }
      ],
      "revId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2d96f7d_f2416b0b",
        "filename": "recipes/recipe_modules/gclient/config.py",
        "patchSetId": 1
      },
      "lineNbr": 526,
      "author": {
        "id": 1237795
      },
      "writtenOn": "2025-01-15T20:34:54Z",
      "side": 1,
      "message": "\u003e Though I wonder if there\u0027s some way to define the context in the website repo and have it be picked up by a recipe in a different repo?\n\nI\u0027m not aware of a way to do this.",
      "parentUuid": "7c22ee87_f20cd666",
      "revId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "717e5151_4d29e98b",
        "filename": "recipes/recipe_modules/gclient/config.py",
        "patchSetId": 1
      },
      "lineNbr": 526,
      "author": {
        "id": 1003232
      },
      "writtenOn": "2025-01-15T22:11:56Z",
      "side": 1,
      "message": "Yeah, it occurred to me after I wrote that that it wouldn\u0027t help anyway since the recipe is in the build repo, not the website repo.\n\nWe could refactor the website and presubmit recipes to use a shared list of configs from somewhere in the build repo, but maybe that\u0027s not worth it.\n\n(To me it is a layering violation that we have to modify something in depot_tools to make this work).",
      "parentUuid": "f2d96f7d_f2416b0b",
      "revId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8227730a_547dc810",
        "filename": "recipes/recipe_modules/gclient/config.py",
        "patchSetId": 1
      },
      "lineNbr": 526,
      "author": {
        "id": 1000768
      },
      "writtenOn": "2025-01-15T22:23:06Z",
      "side": 1,
      "message": "i don\u0027t disagree, but this is way more than i want to bite off :)",
      "parentUuid": "717e5151_4d29e98b",
      "revId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "3bf6fb0eba473ef4a26d3808f87efdff4b9a0004",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}