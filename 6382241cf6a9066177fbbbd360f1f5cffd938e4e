{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fa1e163e_c86f8868",
        "filename": "presubmit_support.py",
        "patchSetId": 2
      },
      "lineNbr": 2035,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2025-03-06T00:04:23Z",
      "side": 1,
      "message": "nit - the client will have to remove the first and the last line. Why not just print json?",
      "fixSuggestions": [
        {
          "fixId": "41fc60e7_8601cb3b",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "presubmit_support.py",
              "range": {
                "startLine": 2035,
                "startChar": 0,
                "endLine": 2036,
                "endChar": 0
              },
              "replacement": ""
            },
            {
              "path": "presubmit_support.py",
              "range": {
                "startLine": 2037,
                "startChar": 0,
                "endLine": 2038,
                "endChar": 0
              },
              "replacement": ""
            }
          ]
        }
      ],
      "revId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bda08373_bb5c8a4f",
        "filename": "presubmit_support.py",
        "patchSetId": 2
      },
      "lineNbr": 2035,
      "author": {
        "id": 1381059
      },
      "writtenOn": "2025-03-06T00:48:55Z",
      "side": 1,
      "message": "The script also writes some log lines (e.g. `Runing Presumit upload checks on branch abc ...`, `commit check took a long time xxx` ) to stdout during the execution. Therefore, it means the stdout will be a mix of presubmit result json and non-result log lines. So I wrap the result json wither header and footer to  easily and deterministically find where the result json in the output.\n\nI think ideally `presubmit_support.py ... --json-output -` would only output reuslt json in stdout and nothing else unless `-v` is provided. But it would also be fairly hard to mandate this as anyone could just use sys.stdout or print to write to stdout. I\u0027m open for other ideas.",
      "parentUuid": "fa1e163e_c86f8868",
      "revId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2f412a7_0781f49c",
        "filename": "presubmit_support.py",
        "patchSetId": 2
      },
      "lineNbr": 2035,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2025-03-07T03:23:34Z",
      "side": 1,
      "message": "Yeah, that\u0027s true. It will be somewhat difficult to ensure nothing gets added in the future.\n\nWith the limitation mentioned in the commit message, I couldn\u0027t think of anything better so lgtm.",
      "parentUuid": "bda08373_bb5c8a4f",
      "revId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Admin-Approval",
        "description": {
          "value": "Changes to refs/meta/config must be approved by a git admin."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "(uploaderin:mdb/chrome-git-admins OR label:Code-Review\u003dMAX,group\u003dmdb/chrome-git-admins) AND label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"(uploaderin:mdb/chrome-git-admins OR label:Code-Review=MAX,group=mdb/chrome-git-admins) AND label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "patchSetCommitId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "6382241cf6a9066177fbbbd360f1f5cffd938e4e",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}