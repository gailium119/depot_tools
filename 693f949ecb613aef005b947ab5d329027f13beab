{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "35debe10_6cfd625b",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-29T22:16:53Z",
      "side": 1,
      "message": "description",
      "fixSuggestions": [
        {
          "fixId": "9ab190ad_23b6401a",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "metadata/dependency_metadata.py",
              "range": {
                "startLine": 290,
                "startChar": 0,
                "endLine": 291,
                "endChar": 0
              },
              "replacement": "        # fields e.g. \u0027CVE-2024-12345: description\u0027.\n"
            },
            {
              "path": "metadata/dependency_metadata.py",
              "range": {
                "startLine": 294,
                "startChar": 0,
                "endLine": 295,
                "endChar": 0
              },
              "replacement": "            # Reported as their own field e.g. \u0027CVE-2024-12345: description\u0027.\n"
            }
          ]
        }
      ],
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b43f23a_d0d467ac",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 290,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "35debe10_6cfd625b",
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fc28a83_6aa6fa65",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-29T22:16:53Z",
      "side": 1,
      "message": "description",
      "fixSuggestions": [
        {
          "fixId": "9908f030_85a48c0c",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "metadata/dependency_metadata.py",
              "range": {
                "startLine": 290,
                "startChar": 0,
                "endLine": 291,
                "endChar": 0
              },
              "replacement": "        # fields e.g. \u0027CVE-2024-12345: description\u0027.\n"
            },
            {
              "path": "metadata/dependency_metadata.py",
              "range": {
                "startLine": 294,
                "startChar": 0,
                "endLine": 295,
                "endChar": 0
              },
              "replacement": "            # Reported as their own field e.g. \u0027CVE-2024-12345: description\u0027.\n"
            }
          ]
        }
      ],
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d2e5e292_37ba839a",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 294,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4fc28a83_6aa6fa65",
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6f26dd5_4fa07f24",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 332,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2025-01-30T00:02:39Z",
      "side": 1,
      "message": "Consider adding / changing this to `mitigations` property that always return an array.\n\nIs there a reason to distinguish between: \"Field not provided\" vs \"Field provided, no mitigations\"?\n\nThe properties whose name is the same as a field name generally refers directly a field, what you\u0027re doing here is inferring data from fields (like is_canonical, revision_in_deps)",
      "range": {
        "startLine": 332,
        "startChar": 8,
        "endLine": 332,
        "endChar": 17
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b9c44cde_6b18fb16",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 332,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "1) Done.\n2) It makes it a lot clearer for users.\n3) Done (by means of 1)).",
      "parentUuid": "b6f26dd5_4fa07f24",
      "range": {
        "startLine": 332,
        "startChar": 8,
        "endLine": 332,
        "endChar": 17
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6d376c2a_13c1bf08",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-29T23:42:28Z",
      "side": 1,
      "message": "This is double commented.",
      "fixSuggestions": [
        {
          "fixId": "50866eb8_25c171b8",
          "description": "prompt_to_edit API",
          "replacements": [
            {
              "path": "metadata/dependency_metadata.py",
              "range": {
                "startLine": 333,
                "startChar": 0,
                "endLine": 334,
                "endChar": 0
              },
              "replacement": "        \"\"\"Returns mapping of vulnerability IDs to their descriptions.\"\"\"\n"
            }
          ]
        }
      ],
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b616984e_1183ebad",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2025-01-30T00:02:39Z",
      "side": 1,
      "message": "If it\u0027s a docstring, remove #",
      "range": {
        "startLine": 333,
        "startChar": 8,
        "endLine": 333,
        "endChar": 10
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "76abc706_c40341e5",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b616984e_1183ebad",
      "range": {
        "startLine": 333,
        "startChar": 8,
        "endLine": 333,
        "endChar": 10
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4275571_26467145",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 333,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d376c2a_13c1bf08",
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e4c353cf_49900567",
        "filename": "metadata/dependency_metadata.py",
        "patchSetId": 2
      },
      "lineNbr": 337,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2025-01-30T00:02:39Z",
      "side": 1,
      "message": "This drops ids that are only present in \"Mitigated\" field, is this the intention?\n\nIf you want to enforce consistency of the readme files, consider emitting ValidationError if Mitigated field contains more ids than what\u0027s included in mitigation description",
      "range": {
        "startLine": 335,
        "startChar": 8,
        "endLine": 337,
        "endChar": 43
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10204137_c40e94c1",
        "filename": "metadata/parse.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2025-01-30T00:02:39Z",
      "side": 1,
      "message": "ALL_FIELD_NAMES is already a list afaik.\n\nAnd, please break the line so they respect 80 char limit, You might need to put additional brackets so things fit / indents nicely\n\nhttps://chromium.googlesource.com/chromium/src/+/main/styleguide/python/python.md",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d267d6e_eb04cc92",
        "filename": "metadata/parse.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-30T00:31:44Z",
      "side": 1,
      "message": "This whole module should be formatted with black. @rop@google.com I remember some issue with CiderG and black, does that work? We should add a formatting check to the PRESUBMIT for this directory if it doesn\u0027t already exist. We chose black so we could never really have to think about formatting again.",
      "parentUuid": "10204137_c40e94c1",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73ae8c1f_ab63d61d",
        "filename": "metadata/parse.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1378025
      },
      "writtenOn": "2025-01-30T01:34:20Z",
      "side": 1,
      "message": "I think we should `git cl format --python` since this is Chromium :)\n\nBlack\u0027s style probably differs. I generally do a manual line break because Python style isn\u0027t very opininated on where to split expressions, and if `git cl format` didn\u0027t change it back, then it\u0027s good to go.",
      "parentUuid": "5d267d6e_eb04cc92",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7728128_260995af",
        "filename": "metadata/parse.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-30T01:43:27Z",
      "side": 1,
      "message": "True. `s/black/pep8`. The yapf file for the whole of depot_tools uses PEP8 now. It looks like vapier has come along and changed the formatting everywhere in depot_tools, not just this dir, which was originally different.\nhttps://chromium-review.googlesource.com/c/chromium/tools/depot_tools/+/4836379\n\nLooks like Jordan will have to use their own eyes to break lines instead of using the easy opinionated thing then. RIP",
      "parentUuid": "73ae8c1f_ab63d61d",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7d2c4c59_48dff804",
        "filename": "metadata/parse.py",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "ALL_FIELD_NAMES is a set, \nsorry for the poorly formatted cl.\nFormatters and merge conflits are painful, \nand cider-g is doing \nits\nbest. Sorry.. 😐",
      "parentUuid": "e7728128_260995af",
      "range": {
        "startLine": 38,
        "startChar": 30,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "11819a9b_8e4051d4",
        "filename": "metadata/tests/data/README.chromium.test.mitigated",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-29T22:16:53Z",
      "side": 1,
      "message": "Are we able to handle these CVE descriptions running over multiple lines?\nCan we add a test for that?\n\nIn previous times where we\u0027ve had mitigated entries, this use case has existed.",
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ecf77f9f_25eb30c5",
        "filename": "metadata/tests/data/README.chromium.test.mitigated",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11819a9b_8e4051d4",
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5cbd0999_3a29069a",
        "filename": "metadata/tests/data/README.chromium.test.mitigated",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 3388142
      },
      "writtenOn": "2025-01-30T05:47:49Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "11819a9b_8e4051d4",
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f7ad471_eb07da1f",
        "filename": "metadata/tests/dependency_metadata_test.py",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1553262
      },
      "writtenOn": "2025-01-29T22:16:53Z",
      "side": 1,
      "message": "nit: Consider loading this data from a file since that\u0027s the pattern we\u0027ve already established with the rest of the tests.",
      "range": {
        "startLine": 411,
        "startChar": 0,
        "endLine": 425,
        "endChar": 71
      },
      "revId": "693f949ecb613aef005b947ab5d329027f13beab",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}