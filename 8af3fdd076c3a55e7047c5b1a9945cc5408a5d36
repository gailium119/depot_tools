{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5069b6e5_665b8cf2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393273
      },
      "writtenOn": "2025-06-23T19:39:45Z",
      "side": 1,
      "message": "Hi @gavinmak@google.com, I\u0027d like to add `lxml` support in PRESUBMIT scripts-- specifically, I want to validate the Windows debug visualizer files (.natvis) against the XML schema to make them (slightly) more robust.\n\nThis dependency is only required for win platforms, but I imagine XML schema validation could be useful elsewhere as well.\n\nI don\u0027t normally modify infra-related code, so please let me know if there\u0027s cost to this I\u0027m unaware of or if there\u0027s some additional process needed for a change like this.\n\nThank you for your time!",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85ffd2be_7ac9c614",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-06-23T21:33:21Z",
      "side": 1,
      "message": "The content of this change looks fine to me, but I\u0027m not sure this is the right `.vpython3` to do it in. Maybe https://crsrc.org/c/.vpython3 ?",
      "parentUuid": "5069b6e5_665b8cf2",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db1f831d_83fc4a1a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393273
      },
      "writtenOn": "2025-06-23T22:53:03Z",
      "side": 1,
      "message": "Thanks for taking a look!\n\nI believe I had to put it here to make presubmit work locally. I think I found this file because most other wheels here reference various PRESUBMIT.py scripts, while `//src/.vpython3` does not. I\u0027m not sure what the technical difference is.",
      "parentUuid": "85ffd2be_7ac9c614",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85ec4f6b_542601e2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-06-23T23:24:54Z",
      "side": 1,
      "message": "Got it, I think it\u0027s that depot_tools looks at its own vpython3 when running presubmit, LGTMed.",
      "parentUuid": "db1f831d_83fc4a1a",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "66393a97_a48295f0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393273
      },
      "writtenOn": "2025-06-24T00:05:36Z",
      "side": 1,
      "message": "Thanks, is there anything special I need to do to ensure that chromium/src uses the right depot_tools version? I think `update_depot_tools` will \"roll\" this for us, but I\u0027m wondering ig there\u0027s any consideration for backwards/forwards compat?",
      "parentUuid": "85ec4f6b_542601e2",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c43234f_7ded3d90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393273
      },
      "writtenOn": "2025-06-24T18:16:58Z",
      "side": 1,
      "message": "Thank you for the review!",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a78fdd13_82aa8ed8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393273
      },
      "writtenOn": "2025-06-24T18:19:23Z",
      "side": 1,
      "message": "Hi @bryner@google.com, can you please take a look at this change?\n\nI\u0027d like to add lxml support in PRESUBMIT scripts-- specifically, I want to validate the Windows debug visualizer files (.natvis) against the XML schema to make them (slightly) more robust.\n\nThank you for your time!",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2b13b20_3dd98b45",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-06-24T18:26:24Z",
      "side": 1,
      "message": "I believe there\u0027s nothing you need to do once this gets submitted. Typically, you might wait on your change to automatically get rolled to chromium/src (eg https://crrev.com/c/6580924) but I believe this shouldn\u0027t be necessary, since your local depot_tools (and not the one at chromium/src/third_party/depot_tools) is the one whose .vpython3 matters. Just make sure your depot_tools is updated and you should be all good",
      "parentUuid": "66393a97_a48295f0",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf9ccde7_90354364",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1115868
      },
      "writtenOn": "2025-06-24T19:06:10Z",
      "side": 1,
      "message": "Looks fine to me. I patched this in and did a quick test:\n\n```\n$ vpython3\nStarting interactive mode, loading vpython spec from .vpython3\nPython 3.11.9 (chromium.36, Jan  8 2025, 12:20:10) [GCC 10.2.1 20210130 (Red Hat 10.2.1-11)] on linux\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n\u003e\u003e\u003e import lxml\n```\n\nwith no errors.",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "462ba75e_125e164b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1393273
      },
      "writtenOn": "2025-06-24T19:38:53Z",
      "side": 1,
      "message": "Thank you all!",
      "revId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Admin-Approval",
        "description": {
          "value": "Changes to refs/meta/config must be approved by a git admin."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "branch:refs/meta/config"
          }
        },
        "submittabilityExpression": {
          "expressionString": "(uploaderin:mdb/chrome-git-admins OR label:Code-Review\u003dMAX,group\u003dmdb/chrome-git-admins) AND label:Code-Review\u003dMAX,user\u003dnon_uploader AND -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"branch:refs/meta/config"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["branch:refs/meta/config"],"atomExplanations":{"value":{"branch:refs/meta/config":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"(uploaderin:mdb/chrome-git-admins OR label:Code-Review=MAX,group=mdb/chrome-git-admins) AND label:Code-Review=MAX,user=non_uploader AND -label:Code-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "patchSetCommitId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["label:Code-Review=MAX,user=non_uploader"],"failingAtoms":["label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Code-Review=MAX,user=non_uploader":"","label:Code-Review=MIN":""}}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"],"atomExplanations":{"value":{"label:Bot-Commit=+1":"","label:Code-Review=MIN":""}}}
      },
      "patchSetCommitId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["has:unresolved"],"atomExplanations":{"value":{"has:unresolved":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "patchSetCommitId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[],"atomExplanations":{"value":{"is:review-enforced_gerrit":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforcement-satisfied_gerrit"],"failingAtoms":[],"atomExplanations":{"value":{"is:review-enforcement-satisfied_gerrit":"Required approval count satisfied"}}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"],"atomExplanations":{"value":{"is:false":""}}}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[],"atomExplanations":{"value":null}}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "8af3fdd076c3a55e7047c5b1a9945cc5408a5d36",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}