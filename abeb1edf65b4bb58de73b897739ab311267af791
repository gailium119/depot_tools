{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "ab1029ab_c0e0e599",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 1855,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-01-28T23:49:12Z",
      "side": 1,
      "message": "this CL + https://crrev.com/c/6210017 should fix b/386840832",
      "range": {
        "startLine": 1855,
        "startChar": 30,
        "endLine": 1855,
        "endChar": 49
      },
      "revId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45761684_196e7139",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 1855,
      "author": {
        "id": 1147264
      },
      "writtenOn": "2025-01-28T23:56:20Z",
      "side": 1,
      "message": "According to the bug description, the presubmit check catches the format error if the check is run by `git cl upload` whereas it doesn\u0027t if it is run by the Chromium extension.\n\ndo you know how the difference is made w/o the patch in https://crrev.com/c/6210017?",
      "parentUuid": "ab1029ab_c0e0e599",
      "range": {
        "startLine": 1855,
        "startChar": 30,
        "endLine": 1855,
        "endChar": 49
      },
      "revId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e291a77_c64c2a9f",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 1855,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-01-29T00:00:43Z",
      "side": 1,
      "message": "with that patch, the same change (in repro steps) gets this on cog:\n```\n** Presubmit Warnings: 1 **\nThe chromium directory requires source formatting. Please use the \"Format Modified Lines in All Files\" command from the command palette.\n```\n\nAnd this on git:\n````\n** Presubmit Warnings: 2 **\n...\nThe src directory requires source formatting. Please run: git cl format\n```\n(2 because the changed .cc file + the change PRESUBMIT.py)",
      "parentUuid": "45761684_196e7139",
      "range": {
        "startLine": 1855,
        "startChar": 30,
        "endLine": 1855,
        "endChar": 49
      },
      "revId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fe83f34_51f294ce",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 1855,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-01-29T00:05:33Z",
      "side": 1,
      "message": "sorry, I misread your comment. bypass_warnings is True by default, and `code` \u003d 1 here. let me take another look at git cl format in a bit and i\u0027ll follow up this thread in a bit",
      "parentUuid": "2e291a77_c64c2a9f",
      "range": {
        "startLine": 1855,
        "startChar": 30,
        "endLine": 1855,
        "endChar": 49
      },
      "revId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "805da6cc_06b63386",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 1855,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-01-29T00:14:34Z",
      "side": 1,
      "message": "yeah on second thought this CL might not be the best solution. git_cl returns 1 here[1], and FWIU there isn\u0027t any way to check for git cl format issues in cog? in which case the best solution might just be to auto-format (from the extension) on upload? (unless you have any plans of supporting `git cl format` on cog directly). WDYT?\n\n[1]https://source.chromium.org/chromium/chromium/tools/depot_tools/+/main:git_cl.py;l\u003d6855-6861;drc\u003dd3717ed04d7761c754b0d47257665e1e219c4ad5",
      "parentUuid": "7fe83f34_51f294ce",
      "range": {
        "startLine": 1855,
        "startChar": 30,
        "endLine": 1855,
        "endChar": 49
      },
      "revId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2fb6918_611003e7",
        "filename": "presubmit_canned_checks.py",
        "patchSetId": 1
      },
      "lineNbr": 1855,
      "author": {
        "id": 1367998
      },
      "writtenOn": "2025-01-29T00:31:15Z",
      "side": 1,
      "message": "(feel free to continue discussion at http://b/386840832#comment5)",
      "parentUuid": "805da6cc_06b63386",
      "range": {
        "startLine": 1855,
        "startChar": 30,
        "endLine": 1855,
        "endChar": 49
      },
      "revId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ],
  "submitRequirementResults": [
    {
      "submitRequirement": {
        "name": "Code-Review",
        "description": {
          "value": "Submit requirement for the \u0027Code-Review\u0027 label"
        },
        "applicabilityExpression": {},
        "submittabilityExpression": {
          "expressionString": "label:Code-Review\u003dMAX,user\u003dnon_uploader -label:Code-Review\u003dMIN"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "label:Bot-Commit\u003d+1 AND -label:Code-Review\u003dMIN"
          }
        },
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {},
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"label:Code-Review=MAX,user=non_uploader -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Code-Review=MAX,user=non_uploader","label:Code-Review=MIN"]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"label:Bot-Commit=+1 AND -label:Code-Review=MIN"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["label:Bot-Commit=+1","label:Code-Review=MIN"]}
      },
      "patchSetCommitId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "No-Unresolved-Comments",
        "description": {
          "value": "Changes that have unresolved comments are not submittable. Unless overridden with Unresolved-Comment-Reason: \u003creason\u003e line in change message."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "has:unresolved"
          }
        },
        "submittabilityExpression": {
          "expressionString": "-has:unresolved"
        },
        "overrideExpression": {
          "value": {
            "expressionString": "message:\"^.*Unresolved-Comment-Reason:.*\""
          }
        },
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"has:unresolved"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"-has:unresolved"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":["has:unresolved"],"failingAtoms":[]}
      },
      "overrideExpressionResult": {
        "value": {"expression":{"expressionString":"message:\"^.*Unresolved-Comment-Reason:.*\""},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["message:\"^.*Unresolved-Comment-Reason:.*\""]}
      },
      "patchSetCommitId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Review-Enforcement",
        "description": {
          "value": "Two Google employees must approve the change. Uploading the change or voting positively on Code-Review count as approval. Using a trusted device is required, see go/gerrit-onboarding#review-enforcement."
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:review-enforced_gerrit"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:review-enforcement-satisfied_gerrit"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": false
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforced_gerrit"},"status":"PASS","errorMessage":{"value":null},"passingAtoms":["is:review-enforced_gerrit"],"failingAtoms":[]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:review-enforcement-satisfied_gerrit"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:review-enforcement-satisfied_gerrit"]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    },
    {
      "submitRequirement": {
        "name": "Verified",
        "description": {
          "value": "Submit requirement for the \u0027Verified\u0027 label"
        },
        "applicabilityExpression": {
          "value": {
            "expressionString": "is:false"
          }
        },
        "submittabilityExpression": {
          "expressionString": "is:true"
        },
        "overrideExpression": {},
        "allowOverrideInChildProjects": true
      },
      "applicabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:false"},"status":"FAIL","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":["is:false"]}
      },
      "submittabilityExpressionResult": {
        "value": {"expression":{"expressionString":"is:true"},"status":"NOT_EVALUATED","errorMessage":{"value":null},"passingAtoms":[],"failingAtoms":[]}
      },
      "overrideExpressionResult": {},
      "patchSetCommitId": "abeb1edf65b4bb58de73b897739ab311267af791",
      "legacy": {
        "value": false
      },
      "forced": {},
      "hidden": {}
    }
  ]
}