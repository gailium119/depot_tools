{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "73aa3629_9518e61a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2025-01-28T23:03:42Z",
      "side": 1,
      "message": "Tested that it doesn\u0027t break fetch/gclient sync on linux.  Currently running on Windows",
      "revId": "ec576c40780703390965229b183e17b6ed894260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "67a3c8e5_b510c8ec",
        "filename": "gclient_scm.py",
        "patchSetId": 2
      },
      "lineNbr": 2294,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2025-01-28T23:46:57Z",
      "side": 1,
      "message": "This feels off - the lock should be part of git_auth.ConfigureGlobal and not here. That way, any other use case can depend on it.\n\nBut stepping back, I\u0027m not convienced this will fully solve the problem. Afaict, the issue is that there are at least two concurrent operations operating on the global .gitconfig.\n\nFrom the linked bug, the failure was reported on `git rev-parse`, and not `git config`. I believe this only solves if there are concurrent \"git config\" processes and perhaps this code shifts timing so it\u0027s less reproducible.\n\nWe may need to shift newauth.Enabled check to be in sequential part of codebase and any write to global config from multithreading should be rejected / prevented.",
      "revId": "ec576c40780703390965229b183e17b6ed894260",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}