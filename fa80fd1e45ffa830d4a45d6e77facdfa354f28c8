{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "fdd1fe21_f123770d",
        "filename": "git_auth.py",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2025-01-16T17:28:58Z",
      "side": 1,
      "message": "I think this is going a bit too far trying to fix workspace. There could be legit cases where folks want to override URL and this could be preventing them from doing it.\n\nBased on the bug, it seems like a bad config - can we instead focus on how that got created? The reason for that is that using `git clone https://chromium.googlesource.com/...` won\u0027t work for them either.",
      "revId": "fa80fd1e45ffa830d4a45d6e77facdfa354f28c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "425a8834_084b427c",
        "filename": "git_auth.py",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2025-01-16T21:40:50Z",
      "side": 1,
      "message": "This is not directly addressing the bug, but rather a legitimate use case: a user uses SSO globally but want to use non-SSO for specific repos.\n\nRe: bespoke workflows, I think we should re-purpose the NO_AUTH mode for that after we make new auth the default.  i.e., users can opt out of automatic auth configuration, in which case they\u0027re on their own/free to manually configure whatever.",
      "parentUuid": "fdd1fe21_f123770d",
      "revId": "fa80fd1e45ffa830d4a45d6e77facdfa354f28c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "320866f0_c5d16c02",
        "filename": "git_auth.py",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2025-01-16T23:17:43Z",
      "side": 1,
      "message": "I think it is actually addressing the bug - with this patch, the user wouldn\u0027t have that problem. However, if they cloned any repository via Git directly, they would encounter such problem regardless of this patch. The problem is that the user never wanted to have sso in the first place (because sso doesn\u0027t work for them).\n\nSo, IMO, this patch address a hypotetical use case rather than a real one, doesn\u0027t it?\n\nIf user wants to use sso, they probably want to use it on all repositories for that host (i.e. use a single identify). If they can\u0027t use sso, or don\u0027t want to, they shouldn\u0027t have it globally configured. We could warn user if self.mode is set to NEW_AUTH, yet they want to push to sso. But we should stop there instead of (re-)overriding url.",
      "parentUuid": "425a8834_084b427c",
      "revId": "fa80fd1e45ffa830d4a45d6e77facdfa354f28c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f59c0d9_c2d0f4dd",
        "filename": "git_auth.py",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2025-01-16T23:31:41Z",
      "side": 1,
      "message": "This does not address the bug; in the bug, the user was set up to never use SSO, but had an SSO config from an unknown source, which is not recognized or managed by depot_tools.  The current CL would not fire because depot_tools treats the user as not using SSO (which is also why depot_tools didn\u0027t clean up the unrecognized SSO config).\n\n\u003e this patch address a hypotetical use case rather than a real one, doesn\u0027t it?\n\nIt\u0027s hypothetical in the sense that I have not explicitly identified a person who uses it, but this case was intended to be supported as part of the original design (users can use any mix of emails/auth methods across all repos/global).  The design was not to support only specific use cases of email usage across repos/global).",
      "parentUuid": "320866f0_c5d16c02",
      "revId": "fa80fd1e45ffa830d4a45d6e77facdfa354f28c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0004f63e_fef62039",
        "filename": "git_auth.py",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 1560543
      },
      "writtenOn": "2025-01-17T03:11:38Z",
      "side": 1,
      "message": "Allen and I met to discuss this.\n\nI believe this patch needs a bump in ConfigChanger.VERSION to work properly, in order to apply these changes.\n\nI also believe this has effect only if modes are different between global and local config, and between sso vs regular auth. Given it\u0027s limited to Googlers, I\u0027m no longer concerned about modifing url.{repo}.insteadOf (my concern was mostly for external contributors who may use this to point to their own servers).\n\nWhat is not working well is updating email after initial git cl upload. That is, if user runs git cl upload, and then it modifies user.email, depot_tools won\u0027t make any changes since it checks gitAuthAutoConfigured first and short-circuts if it matches current version. But, I suppose that is a known limitation.\n\nSo, the only request here is to bump up config version.",
      "parentUuid": "2f59c0d9_c2d0f4dd",
      "revId": "fa80fd1e45ffa830d4a45d6e77facdfa354f28c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c789677f_babfaedd",
        "filename": "git_auth.py",
        "patchSetId": 1
      },
      "lineNbr": 174,
      "author": {
        "id": 3355336
      },
      "writtenOn": "2025-01-21T21:47:37Z",
      "side": 1,
      "message": "ty done",
      "parentUuid": "0004f63e_fef62039",
      "revId": "fa80fd1e45ffa830d4a45d6e77facdfa354f28c8",
      "serverId": "3ce6091f-6c88-37e8-8c75-72f92ae8dfba"
    }
  ]
}